{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoItem","todo","selectedTodo","setSelectedTodo","className","classNames","id","completed","title","type","onClick","TodoList","todos","map","TodoFilter","query","onChangeQuery","resetQuery","filterType","setFilterType","value","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","currUser","setCurrUser","useEffect","fetchUser","a","userId","user","console","error","href","email","name","App","setTodos","isLoading","setIsLoading","setQuery","ALL","fetchData","newTodos","useCallback","target","filterTodo","useMemo","filter","todosFilter","toLowerCase","includes","COMPLETED","ACTIVE","ReactDOM","render","document","getElementById"],"mappings":"iLAEYA,E,0FCQCC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,KACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,gBAHuC,OAKvC,qBACE,UAAQ,OACRC,UAAWC,IAAW,CACpB,6BAAyC,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAcI,MAAOL,EAAKK,KAH3D,UAME,oBAAIF,UAAU,eAAd,SAA8BH,EAAKK,KACnC,oBAAIF,UAAU,eAAd,SACGH,EAAKM,WACJ,sBAAMH,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWC,IAAW,CACpB,mBAAoBJ,EAAKM,UACzB,mBAAoBN,EAAKM,YAH7B,SAMGN,EAAKO,UAGV,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVK,KAAK,SACLC,QAAS,kBAAMP,EAAgBF,IAJjC,SAME,sBAAMG,UAAU,OAAhB,SACE,mBACEA,UAAWC,IAAW,MAAO,CAC3B,eAAgBJ,EAAKK,MAAL,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAcI,IAC1C,SAAUL,EAAKK,MAAL,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAcI,kBCxCrCK,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAV,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,gBAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGQ,EAAMC,KAAI,SAAAZ,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,gBAAiBA,GAHZF,EAAKK,c,SF9BRP,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAcL,IAAMe,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,MACAC,EAFyC,EAEzCA,cACAC,EAHyC,EAGzCA,WACAC,EAJyC,EAIzCA,WACAC,EALyC,EAKzCA,cALyC,OAOzC,uBAAMf,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRgB,MAAOF,EACPG,SACE,SAACC,GAAD,OAAWH,EAAcG,EAAMC,cAAcH,QAJjD,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGhB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRK,KAAK,OACLL,UAAU,QACVoB,YAAY,YACZJ,MAAOL,EACPM,SAAUL,IAEZ,sBAAMZ,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBqB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRjB,KAAK,SACLL,UAAU,SACVM,QAASO,aGzDRU,G,MAAmB,kBAC9B,qBAAKvB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASwB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAGpC,IAFLrC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,EAAgCqC,mBAAsB,MAAtD,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,+EDQEC,ECNW5C,EAAa4C,ODMLlB,EAAG,iBAAiBkB,ICRzC,OAERC,EAFQ,OAIdL,EAAYK,GAJE,gDAOdC,QAAQC,MAAM,oBAAd,MAPc,kCDQC,IAACH,ICRF,oBAAH,qDAWfF,MACC,CAAC1C,EAAa4C,SAGf,sBAAK1C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbqC,EAGA,sBAAKrC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaI,MAIzB,wBACEG,KAAK,SACLL,UAAU,SACV,UAAQ,cACRM,QAAS,kBAAMP,EAAgB,YAInC,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaM,QAGhB,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAU,kBAAlB,qBAEC,OAED,mBAAG8C,KAAI,iBAAYT,EAASU,OAA5B,SACGV,EAASW,gBAhClB,cAAC,EAAD,QCpBKC,EAAgB,WAC3B,MAA0Bb,mBAAiB,IAA3C,mBAAO5B,EAAP,KAAc0C,EAAd,KACA,EAAkCd,oBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAAwChB,mBAAsB,MAA9D,mBAAOtC,EAAP,KAAqBC,EAArB,KACA,EAA0BqC,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc0C,EAAd,KACA,EAAoCjB,mBAASzC,EAAW2D,KAAxD,mBAAOxC,EAAP,KAAmBC,EAAnB,KAEAwB,qBAAU,WACR,IAAMgB,EAAS,uCAAG,4BAAAd,EAAA,sEAEdW,GAAa,GAFC,SFDQ5B,EAAY,UECpB,OAGRgC,EAHQ,OAKdN,EAASM,GALK,gDAQdZ,QAAQC,MAAR,MARc,yBAUdO,GAAa,GAVC,4EAAH,qDAcfG,MACC,IAEH,IAAM3C,EAAgB6C,uBAAY,SAACvC,GACjCmC,EAASnC,EAAMwC,OAAO1C,SACrB,IAEGH,EAAa4C,uBAAY,WAC7BJ,EAAS,MACR,IAEGM,EAAaC,mBAAQ,WACzB,OAAOpD,EAAMqD,QAAO,SAAAhE,GAClB,IAAMiE,EAAcjE,EAAKO,MAAM2D,cAAcC,SAASrD,EAAMoD,eAE5D,OAAQjD,GACN,KAAKnB,EAAW2D,IACd,OAAOQ,EAET,KAAKnE,EAAWsE,UACd,OAAOpE,EAAKM,WAAa2D,EAE3B,KAAKnE,EAAWuE,OACd,OAAQrE,EAAKM,WAAa2D,EAE5B,QACE,OAAOA,QAGZ,CAACnD,EAAOH,EAAOM,IAElB,OACE,qCACE,qBAAKd,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,MAAOA,EACPC,cAAeA,EACfC,WAAYA,EACZC,WAAYA,EACZC,cAAeA,MAInB,qBAAKf,UAAU,QAAf,SACGmD,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACE3C,MAAOmD,EACP7D,aAAcA,EACdC,gBAAiBA,aAQ5BD,GACC,cAAC,EAAD,CACEA,aAAcA,EACdC,gBAAiBA,QCtG3BoE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14462ac2.chunk.js","sourcesContent":["import React from 'react';\n\nexport enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\ntype Props = {\n  query: string,\n  onChangeQuery: (event: React.ChangeEvent) => void,\n  resetQuery: () => void,\n  filterType: FilterType,\n  setFilterType: (event: FilterType) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  resetQuery,\n  filterType,\n  setFilterType,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterType}\n          onChange={\n            (event) => setFilterType(event.currentTarget.value as FilterType)\n          }\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onChangeQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={resetQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <tr\n    data-cy=\"todo\"\n    className={classNames({\n      'has-background-info-light': selectedTodo?.id === todo.id,\n    })}\n  >\n    <td className=\"is-vcentered\">{todo.id}</td>\n    <td className=\"is-vcentered\">\n      {todo.completed && (\n        <span className=\"icon\" data-cy=\"iconCompleted\">\n          <i className=\"fas fa-check\" />\n        </span>\n      )}\n    </td>\n    <td className=\"is-vcentered is-expanded\">\n      <p\n        className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n      >\n        {todo.title}\n      </p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button\n        data-cy=\"selectButton\"\n        className=\"button\"\n        type=\"button\"\n        onClick={() => setSelectedTodo(todo)}\n      >\n        <span className=\"icon\">\n          <i\n            className={classNames('far', {\n              'fa-eye-slash': todo.id === selectedTodo?.id,\n              'fa-eye': todo.id !== selectedTodo?.id,\n            })}\n          />\n        </span>\n      </button>\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [currUser, setCurrUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const user = await getUser(selectedTodo.userId);\n\n        setCurrUser(user);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('User is not found', error);\n      }\n    };\n\n    fetchUser();\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={`mailto:${currUser.email}`}>\n                {currUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FilterType, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterType, setFilterType] = useState(FilterType.ALL);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const newTodos = await getTodos();\n\n        setTodos(newTodos);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const onChangeQuery = useCallback((event) => {\n    setQuery(event.target.value);\n  }, []);\n\n  const resetQuery = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  const filterTodo = useMemo(() => {\n    return todos.filter(todo => {\n      const todosFilter = todo.title.toLowerCase().includes(query.toLowerCase());\n\n      switch (filterType) {\n        case FilterType.ALL:\n          return todosFilter;\n\n        case FilterType.COMPLETED:\n          return todo.completed && todosFilter;\n\n        case FilterType.ACTIVE:\n          return !todo.completed && todosFilter;\n\n        default:\n          return todosFilter;\n      }\n    });\n  }, [query, todos, filterType]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={onChangeQuery}\n                resetQuery={resetQuery}\n                filterType={filterType}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filterTodo}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}